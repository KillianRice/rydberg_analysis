function [ output_args ] = plot_AvgCounts_vs_xVariable2(analyVar, indivDataset)
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here

NumDensities = indivDataset{1}.numDensityGroups{1};
NumStates    = analyVar.numBasenamesAtom;

%% Choose sample data
% fixedField = analyVar.PeakBin;
fixedDelayTime = 1;
fixedDensity = 1;
fixedFrequency = 1;
DelayDim = 2;
DelayIndex = 1; 

[tickNums, tickNames] = deal(cell(1,3));
tickNums{1} = [160  179  199  224  251  284  321 365];
tickNums{2} = [152  169  189  211  237  267  302 343 391];
tickNums{3} = [148  164  183  204  229  258  291 329 374];

tickNames{1} = {'41', '40', '39', '38', '37', '36', '35', '34'};
tickNames{2} = {'41', '40', '39', '38', '37', '36', '35', '34' '33'};
tickNames{3} = {'41', '40', '39', '38', '37', '36', '35', '34', '33'};

%% Load Data

[xData, ~, ~] = AxisTicksEngineeringForm(analyVar.ElectricField);
% [xData, ~, ~] = AxisTicksEngineeringForm(analyVar.roiStart:analyVar.roiEnd);
xData = reshape(xData, [length(xData),1]);

[yData, yData_error] = deal(cell(1, NumStates));
for mbIndex = 1:NumStates
    NumBatches   = indivDataset{mbIndex}.CounterAtom;
%     ArrayDim = ndims(indivDataset{mbIndex}.AbsNormAvgSpectra);
    yData{mbIndex}  = indivDataset{mbIndex}.AbsNormAvgSpectra(:,:, fixedDensity);
    yData_error{mbIndex}  = indivDataset{mbIndex}.AbsNormAvgSpectra_error(:,:, fixedDensity)/NumBatches^0.5;
end

%% Plot
[figHan] = deal(cell(1, NumStates));
for mbIndex = 1:NumStates

    AvgSpectra2Color = flipud(RedToBlue(size(indivDataset{mbIndex}.AbsNormAvgSpectra, DelayDim)));
    
    [figHan{mbIndex}] = deal(cell(1,2));

    for axisformat = 2

        figHan{mbIndex}{axisformat} = figure(...
            'Units', 'pixels', ...
            'Position', [100 100 315 250]);
        set(figHan{mbIndex}{axisformat}, 'Renderer', 'painters')
        hold on
        axHan = gca;
        
%         recHan = rectangle('Position', [220.3 1.0001e-4 233.8-220.3 .471]);
%         set(recHan,...
%             'LineStyle' , 'none',...
%             'FaceColor', [.8 .8 .8],...
%             'Clipping', 'on');
        
        if mbIndex == 1 
            PlaceArrowsAtomic
        else
            PlaceArrowsMol
        end

        for DelayIndex = 1:size(indivDataset{mbIndex}.AbsNormAvgSpectra, DelayDim)
%             DataPlotHan = plot(...
%                 xData,...
%                 yData{mbIndex}(:,DelayIndex)...
%                 );
            
            DataPlotHan = errorbar(...
                xData,...
                yData{mbIndex}(:,DelayIndex),...
                yData_error{mbIndex}(:,DelayIndex)...
                );            
            removeErrorBarEnds(DataPlotHan)
            set(DataPlotHan       , ...
                'Marker'          , 'o',...
                'MarkerSize'      , 3,...
                'LineStyle'       , '-' , ...
                'LineWidth'       , 0.5 , ...
                'Color'           , AvgSpectra2Color(DelayIndex,:),...
                'markerfacecolor' , AvgSpectra2Color(DelayIndex,:)...
                );

        end        
        
        if axisformat==2
                set(axHan,'YScale','log')
        end
        
%         PlotVertStateLines 
%         axis tight
        
        hold off

%         [legendstr, ~, ~] = AxisTicksEngineeringForm(indivDataset{mbIndex}.timedelayOrderMatrix{1});
%         legendstr = round(legendstr);
%         legendstr = textscan(num2str(legendstr),'%s');
%         legendstr = reshape(legendstr{1}, [length(legendstr{1}),1]);
%         legHandle = legend(legendstr);
%         
%         set(legHandle,...
%             'FontSize', 8,...
%             'Units', 'Pixels',...
%             'EdgeColor', [1 1 1],...
%             'Position', [175 135 30 70])
%         
%         hText2   = text(0,0, 't_D (\mus)' ,'Interpreter','tex');
%         set(hText2,...
%             'Units', 'Normalized',...
%             'BackgroundColor', 'white',...
%             'EdgeColor', 'none',...
%             'Position', [.55, .92],...
%             'FontSize', 8)   
        
        x_string = 'Ionization Field (V cm^{-1})';
        hXLabel = xlabel(x_string);
        hYLabel = ylabel('Signal (Arb. Units)');

%         grid on
        
%         hText1   = text(0,0,sprintf('nS States'));
%         set(hText1,...
%             'Units', 'Normalized',...
%             'Position', [.075, -.195-0.04],...
%             'FontSize', 12)
% 
%         hText2   = text(0,0,sprintf('nP States'));
%         set(hText2,...
%             'Units', 'Normalized',...
%             'Position', [.075, -.275-0.04],...
%             'FontSize', 12)
% 
%         hText3   = text(0,0,sprintf('nD States'));
%         set(hText3,...
%             'Units', 'Normalized',...
%             'Position', [.075, -.360-0.04],...
%             'FontSize', 12)
% 
%         titleHan = title('n = 38 Dimer Molecular Ground State');
%         set(titleHan, 'Color', [.3,.3,.3])
        set([hXLabel, hYLabel, axHan] , 'FontSize', 8);
        axis tight
        set(axHan, ...
          'Box'         , 'on'      , ...
          'TickLength'  , [.02 .02] , ...        
          'XMinorTick'  , 'off'      , ...
          'XColor'      , [0 0 0], ...
          'YColor'      , [0 0 0], ...
          'YMinorTick'  , 'on'      , ...
          'YMinorGrid'  , 'off'      ,...
          'YLim'        , [1e-4, 1],...
          'LineWidth'   , 0.5, ...
          'Clipping' , 'on' ...
            );       
        
%         StateAxis

hText1   = text(0,0, '(b)' ,'Interpreter','latex');
set(hText1,...
    'Units', 'Normalized',...
    'BackgroundColor', 'white',...
    'EdgeColor', 'none',...
    'Position', [.075, .875],...
    'FontSize', 12)        
    end        
end
end

