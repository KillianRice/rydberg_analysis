function funcOut = Autler_Townes_fit(analyVar, indivDataset, avgDataset)
    
    % Autler_Townes_fit - Soumya K kanungo 2020.07.31
    % Fits MCS data to a typical double lorentzian. Change the form if you
    % need something else like a double gaussian.
    
    form = @(coeffs, x) coeffs(1)...
        .*(coeffs(3).^2)./((x-coeffs(2)).^2+coeffs(3).^2)...
        + coeffs(4).*(coeffs(6).^2)./((x-coeffs(5)).^2+coeffs(6).^2) + coeffs(7);
    indVarField = 'imagevcoAtom'; % independent variable
    depVarField = 'sfiIntegral'; % dependent variable
    
    %% initial guess code
    function initialguess = x0(xdata, ydata)
        initialguess = [1,1048.9,0.1,1,1049.3,0.1,0];
        initialguess(1) = max(ydata)-min(ydata);
        initialguess(4) = initialguess(1);
        initialguess(3) = (max(xdata)-min(xdata))/20;
        initialguess(6) = initialguess(3);
    end


    %% options
    % the base_fit function is designed to be flexible, and can accept a
    % lot of different parameters to adjust 
    %%%%% Default Options %%%%%
%         options = struct(...
%         'DataPlotFunction', @defaultDataPlot,...
%         'AvgDataPlotFunction', @defaultAvgDataPlot,...
%         'FitLinePlotFunction', @defaultFitLinePlot,...
%         'AnnotateFunction', @defaultAnnotate,...
%         'IndivFitPlotFunction', @defaultIndivFitPlot,...
%         'PlotIndivFits' , true,...
%         'PlotAvgFits', true,...
%         'XAxisLabel', indVarField ,...
%         'YAxisLabel', depVarField,...
%         'FitLB', [],...
%         'FitUB', [],...
%         'FitOptions', struct('Display','off'),...
%         'PlotInitialGuess', true, ...
%         'InitialGuessPlotFunction', @defaultInitialGuessPlot,...
%         'PlotAll', true,...
%         'PlotAllAvgs', true, ...
%         'CoeffNames', {{}},...
%         'CoeffUnits', {{}},...
%         'YAxisScale', 'linear',...
%         'XAxisScale', 'linear');
    %%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    options = struct(...
        'PlotIndivFits', false,...
        'PlotAll', false,...
        'PlotAllAvgs', false,...
        'CoeffNames', {{'Amp1.', '\mu_1.', '\sigma_1', 'Amp2', '\mu_2', '\sigma_2'}},...
        'CoeffUnits', {{'','MHz','MHz','', 'MHz', 'MHz'}},...
        'AnnotateFunction', @myAnnotate,...
        'PlotInitialGuess', false);
    base_fit(analyVar, indivDataset, avgDataset, form, indVarField, depVarField, @x0, options)
    
    funcOut.analyVar = analyVar;
    funcOut.indivDataset = indivDataset;
    funcOut.avgDataset = avgDataset;

end
function an = myAnnotate(coeffs, err, coeffNames, coeffUnits)
    dim = [.7 .5 .3 .3];
    
    strs = cell(7,1);
    for i = 1:6
        if i <= numel(coeffs)
            strs{i} = [coeffNames{i}, ': ', unc_string(coeffs(i),err(i)),...
                ' ', coeffUnits{i}, newline];
            strs{i}
        end
    end
    strs{7} = ['\sigma_2-\sigma_1 :',unc_string(coeffs(5)-coeffs(2),err(5)+err(2)),' ', 'MHz']
    
    an = annotation('textbox', dim, 'String', strjoin(strs),...
        'FitBoxToText', 'on', 'BackgroundColor', 'white');
end

